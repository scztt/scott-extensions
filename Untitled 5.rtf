{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 LucidaSans;\f1\fnil\fcharset77 LucidaSans-Demi;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 \ul \ulc2 *\cf3 \ulc3 GlobalProxyspaceInit\cf2 \ulnone \
\
 \cf4 // Execute one time\cf2 \
(\
	\cf3 DualEnvir\cf2 .new(s, \cf5 "inst"\cf2 ).linkDoc;\
	\cf3 Document\cf2 .current.proxyBold;\
)\
\
\cf3 SynthDef\cf2 ( \cf6 \\clicker\cf2 , \{\
	\cf3 | out=0, pan=0, amp=0.1, pos=0.2, dur=0.3, rate=1, buffer |\
	var eAmp;\cf2 \
	eAmp = \cf3 EnvGen\cf2 .ar( \cf3 Env\cf2 .perc(0.03, dur), levelScale:amp, doneAction:2 );\
	\cf3 Out\cf2 .ar( Pan2.ar( \cf3 PlayBuf\cf2 .ar( 1, buffer, 1, rate, 1, pos*\cf3 BufSamples\cf2 .kr( buffer ) ), pan, eAmp ) )\
\}).store.send(s)\
\
\

\f1\b ~sin
\f0\b0 .clear\

\f1\b ~sin
\f0\b0  = \{ \
	\cf3 | amp=0.01, freq=10000 |\cf2 \
	\cf3 SinOsc\cf2 .ar( freq, 0, amp)\
\}\

\f1\b ~sin
\f0\b0 .play\
\
f = se((\
	play:\{ \cf3 |inval|\cf2  
\f1\b ~target
\f0\b0 .postln; 
\f1\b ~target
\f0\b0 .set(\cf6 \\amp\cf2 , 
\f1\b ~level
\f0\b0 ); 4.yield; \cf5 "."\cf2 .postln; 
\f1\b ~target
\f0\b0 .set(\cf6 \\amp\cf2 , 0.1); 
\f1\b ~end
\f0\b0 .wait(inval) \},\
	target: 
\f1\b p[\cf5 "inst"\cf2 ][\cf6 \\sin\cf2 ]
\f0\b0 ,\
	level:1,\
	end:
\f1\b ~e_endCond
\f0\b0 \
	))\
\

\f1\b ~e_endCond
\f0\b0  = \cf3 Condition\cf2 (\cf3 false\cf2 )\

\f1\b ~endCond
\f0\b0 .unhang\
\

\f1\b p[\cf5 "inst"\cf2 ][\cf6 \\sin\cf2 ].set(\cf6 \\amp\cf2 , 0.1)
\f0\b0 \
\
(freq:840)[\cf6 \\play\cf2 ]\
\
f.asStream.play\
\
x = (test:10, play:#\{\cf5 "asdf"\cf2 .postln\})\
x.gui\
14.gui\
\
+(4,5)\
\
p = [\
	(freq:440, dur:4),\
	(freq:660, dur:4),\
	f.composeEvents((level:0.3)),\
	f.composeEvents((level:0.7)),\
	\cf3 Event\cf2 .silent(10),\
	f.composeEvents((level:0.1))\
	];\
\
n = \cf3 Pseq\cf2 (f).play\
n.play\
n.next\
\
se((test:3))\
\
}